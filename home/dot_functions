# mkdir and cd simultaneously
function mkcd() {
    if [[ -d $1 ]]; then
    echo "$1 already exists"
    cd $1
    else
    mkdir -p $1 && cd $1
    fi
}

# cd and ls simultaneously
function cl() {
    cd $1 && exa -la --git
}

# Fuzzy search in repositories
function search_ghq() {
    local target_dir=$(ghq list -p | fzf --query="$LBUFFER")
    if [ -n "$target_dir" ]; then
        BUFFER="cd ${target_dir}"
        zle accept-line
    fi
    zle reset-prompt
}

function drm() {
    sudo docker ps -a | sed 1d | fzf --no-sort -m | awk "{ print $1 }" | xargs -r docker rm
}

function drmi() {
    sudo docker images | sed 1d | fzf --no-sort -m | awk "{ print $1 }" | xargs -r docker rmi
}

function ff() {
    RG_DEFAULT_COMMAND="rg -i -l --hidden --follow --glob '!.git/*'"
    fzf -m --ansi --phony --bind "change:reload:$RG_DEFAULT_COMMAND {q} || true" --preview "rg -i --context 2 --pretty {q} {}"
}

function qrcode () {
    local input="$*"
    [ -z "$input" ] && local input="@/dev/stdin"
    curl -d "$input" https://qrcode.show
}

funtion fzf-switch-branch() {
    if [ $@ ]; then
        git switch $@
    else
        local branch=$(
            git branch -a | \
                grep -v 'HEAD' | \
                cut -c 3- | \
                fzf --exit-0 --info=hidden --no-multi --prompt="CHECKOUT BRANCH > " --preview-window=right:60% \
                    --preview="echo {} | xargs git log --graph --color=always --date=iso --pretty=format:'%C(yellow)%h %C(green)%cd %C(reset)%s %C(red)%d %C(cyan)[%an]'"
        )
        if [ -n "${branch}" ]; then
            # In sed regex, ^/ matches characters other than '/'.
            git switch $(echo "${branch}" | sed 's#remotes/[^/]*/##')
        fi
    fi
}
